Automated Testing 

* AutoIt
* Selenium
* Watir
* Sahi 
* Swapy (Python win scripting) 

***

http://stackoverflow.com/questions/606550/watir-vs-selenium-vs-sahi
* Comparisons

***
http://stackoverflow.com/questions/17540971/how-to-use-selenium-with-python

**************************************************
DOCUMENTATION 

http://selenium-python.readthedocs.org/index.html
http://selenium-python.readthedocs.org/getting-started.html#walk-through-of-the-example
* brief tutorial 

https://gist.github.com/douglas/1100668


*****************************************************
MISC 

http://blog.activelylazy.co.uk/2010/05/05/testing-asynchronous-applications-with-webdriver/
* handling async 

http://baoilleach.blogspot.com/2014/01/testing-webapps-from-python-with.html
* misc examples with handling wait util with search lambdas 

http://stackoverflow.com/questions/2850460/how-do-you-connect-remotely-using-python-webdriver
* remote web server

*** 

CHROME 

http://stackoverflow.com/questions/8255929/running-webdriver-chrome-with-selenium
* steps 

install chrome driver, run as background process 

# import os
# chromedriver = "c:/tmp/chromedriver.exe"
# os.environ["webdriver.chrome.driver"] = chromedriver
# driver = webdriver.Chrome(chromedriver)
# driver.get("http://10.1.64.20:8080/looqs-web/looqs.html")


*** 

TEST 

# TEST
# driver = webdriver.Firefox()
# driver.get("http://www.python.org")
# assert "Python" in driver.title
# elem = driver.find_element_by_name("q")
# elem.send_keys("selenium")
# elem.send_keys(Keys.RETURN)
# driver.close()


*** 

